# Author:  Niels A.D.
# Project: goop (https://github.com/nielsAD/goop)
# License: Mozilla Public License, v2.0

image: Visual Studio 2017

clone_folder: c:\gopath\src\github.com\nielsAD\goop

artifacts:
  - path: bin\*
  - path: release_*

environment:
  GOPATH: c:\gopath
  matrix:
    - GOROOT: C:\go-x86
      MSYSTEM: MINGW32
      MSYS2_ARCH: i686
    - GOROOT: c:\go
      MSYSTEM: MINGW64
      MSYS2_ARCH: x86_64

stack: go 1.11

install:
  # Initialize environment
  - set PATH=%GOPATH%\bin;%GOROOT%\bin;C:\msys64\usr\bin;%PATH%

  # Download submodules
  - git submodule update --init --recursive

  # Install OS dependencies
  - bash -lc "pacman --needed --noconfirm -Syu" # core system upgrade
  - bash -lc "pacman --needed --noconfirm -Syu" # out-of-date packages
  - bash -lc "pacman --needed --noconfirm -S mingw-w64-$MSYS2_ARCH-toolchain mingw-w64-$MSYS2_ARCH-cmake"

  # Install test dependencies
  - go get golang.org/x/lint/golint

build: off

test_script:
  - bash -lc "cd $APPVEYOR_BUILD_FOLDER; make test TEST_RACE=0"
  - bash -lc "cd $APPVEYOR_BUILD_FOLDER; make release GO_FLAGS=\"-ldflags '-linkmode external -extldflags -static'\""

after_test:
  - md5sum ./bin/*
  - >
    bash -lc "echo -e
    \"Author:   Niels A.D.
    \nProject:  goop (https://github.com/nielsAD/goop)
    \nPlatform: Windows $MSYS2_ARCH
    \nRelease:  $APPVEYOR_REPO_TAG_NAME ($APPVEYOR_REPO_COMMIT)
    \nDate:     `date --utc`\""
    > VERSION
  - mv config.toml.example config.toml
  - mv bin/goop.exe goop.exe
  - 7z a release_windows_%MSYS2_ARCH%_%APPVEYOR_REPO_TAG_NAME%.zip goop.exe config.toml LICENSE VERSION

deploy:
  provider: GitHub
  auth_token:
    secure: wDwXLoUDnL32TSi+DpnwB4o+8LitFI6eIoyOqjm6//LiGMBMpkLiu/PaIZdCw4G/
  artifact: /release_.*/
  on:
    appveyor_repo_tag: true
